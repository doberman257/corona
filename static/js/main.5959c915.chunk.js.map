{"version":3,"sources":["Tables.jsx","App.jsx","index.js"],"names":["Tables","this","props","countries","onSortByTotalConfirmed","onSortByTotalDeath","onSortByTotalRecovered","onSortByTotalActive","className","scope","href","onClick","map","country","key","countryName","confirmed","recovered","deaths","active","React","Component","App","state","totalConfirmed","totalDeaths","totalRecovered","url","sortByTotalConfirmed","countryA","countryB","e","preventDefault","sort","setState","sortByTotalDeath","sortByTotalRecovered","sortByTotalActive","axios","get","response","rows","data","split","i","length","row","Number","push","Promise","setTimeout","x","toString","replace","numberWithCommas","ReactDOM","render","document","getElementById"],"mappings":"uTAsCeA,E,uKAlCF,IAAD,EACwGC,KAAKC,MAA1GC,EADH,EACGA,UAAYC,EADf,EACeA,uBAAuBC,EADtC,EACsCA,mBAAmBC,EADzD,EACyDA,uBAAwBC,EADjF,EACiFA,oBACrF,OACI,yBAAKC,UAAU,oBACX,2BAAOA,UAAU,uBACb,+BACI,4BAEI,wBAAIC,MAAM,QAAV,WACA,wBAAIA,MAAM,QAAO,uBAAGC,KAAK,IAAIC,QAASP,GAArB,UACjB,wBAAIK,MAAM,OAAM,uBAAGC,KAAK,IAAIC,QAASL,GAArB,aAChB,wBAAIG,MAAM,OAAM,uBAAGC,KAAK,IAAIC,QAASN,GAArB,UAChB,wBAAII,MAAM,OAAM,uBAAGC,KAAK,IAAIC,QAASJ,GAArB,aAGxB,+BAEQJ,EAAUS,KAAI,SAACC,GAAD,OACV,wBAAIC,IAAKD,EAAQE,aACb,4BAAKF,EAAQE,aACb,4BAAKF,EAAQG,WACb,4BAAKH,EAAQI,WACb,4BAAKJ,EAAQK,QACb,4BAAKL,EAAQM,mB,GAzB5BC,IAAMC,WC8IZC,E,4MAzIbC,MAAQ,CACNC,eAAgB,EAChBC,YAAa,EACbC,eAAgB,EAChBvB,UAAW,I,EAGbwB,IAAM,4F,EAyCNC,qBAAuB,SAACC,EAAUC,GAChC,OAAGA,EAASd,UAAYa,EAASb,WAAmB,EAC5Cc,EAASd,UAAYa,EAASb,UAAkB,EAC5C,G,EAGdZ,uBAAyB,SAAC2B,GACxBA,EAAEC,iBACF,IAAM7B,EAAS,YAAO,EAAKoB,MAAMpB,WACjCA,EAAU8B,KAAK,EAAKL,sBACpB,EAAKM,SAAS,CAAE/B,e,EAGlBgC,iBAAmB,SAACN,EAAUC,GAC5B,OAAGA,EAASZ,OAASW,EAASX,QAAgB,EACtCY,EAASZ,OAASW,EAASX,OAAe,EACtC,G,EAGdb,mBAAqB,SAAC0B,GACpBA,EAAEC,iBACF,IAAM7B,EAAS,YAAO,EAAKoB,MAAMpB,WACjCA,EAAU8B,KAAK,EAAKE,kBACpB,EAAKD,SAAS,CAAE/B,e,EAGlBiC,qBAAuB,SAACP,EAAUC,GAChC,OAAGA,EAASb,UAAYY,EAASZ,WAAmB,EAC5Ca,EAASb,UAAYY,EAASZ,UAAkB,EAC5C,G,EAGdX,uBAAyB,SAACyB,GACxBA,EAAEC,iBACF,IAAM7B,EAAS,YAAO,EAAKoB,MAAMpB,WACjCA,EAAU8B,KAAK,EAAKG,sBACpB,EAAKF,SAAS,CAAE/B,e,EAGlBkC,kBAAoB,SAACR,EAAUC,GAC7B,OAAGA,EAASX,OAASU,EAASV,QAAgB,EACtCW,EAASX,OAASU,EAASV,OAAe,EACtC,G,EAGdZ,oBAAsB,SAACwB,GACrBA,EAAEC,iBACF,IAAM7B,EAAS,YAAO,EAAKoB,MAAMpB,WACjCA,EAAU8B,KAAK,EAAKI,mBACpB,EAAKH,SAAS,CAAE/B,e,0NAvFOmC,IAAMC,IAAItC,KAAK0B,K,OAStC,IATMa,E,OACAC,EAAOD,EAASE,KAAKC,MAAM,MAG7BnB,EAAiB,EACjBC,EAAc,EACdC,EAAiB,EACfvB,EAAY,GAEVyC,EAAE,EAAGA,EAAEH,EAAKI,OAAQD,IACpBE,EAAML,EAAKG,GAAGD,MAAM,iCACpB5B,EAAc+B,EAAI,GAClB9B,EAAY+B,OAAOD,EAAI,IACvB5B,EAAS6B,OAAOD,EAAI,IACpB7B,EAAY8B,OAAOD,EAAI,IACvB3B,EAAS4B,OAAOD,EAAI,IAEP,KAAhB/B,IACDZ,EAAU6C,KAAK,CACbjC,YAAaA,EACbC,UAAWA,EACXE,OAAQA,EACRD,UAAWA,EACXE,OAAQA,IAEVK,GAAkBR,EAClBU,GAAkBT,EAClBQ,GAAeP,G,iBAIb,IAAI+B,SAAQ,SAACL,GAAD,OAAOM,WAAWN,EAAE,Q,QAEtC3C,KAAKiC,SAAS,CACZ/B,YAAWuB,iBAAgBD,cAAaD,mB,8IAwD3B2B,GACf,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,O,+BAG9C,IAAD,EAC2DpD,KAAKsB,MAA/DpB,EADD,EACCA,UAAWqB,EADZ,EACYA,eAAgBC,EAD5B,EAC4BA,YAAaC,EADzC,EACyCA,eAC/C,OACE,yBAAKlB,UAAU,IACd,wBAAIA,UAAU,4BAAd,mBACA,yBAAKA,UAAU,oCACZ,yBAAKA,UAAU,iBACb,qCACA,0BAAMA,UAAU,oBAAoBP,KAAKqD,iBAAiB9B,KAE5D,yBAAKhB,UAAU,iBACb,wBAAIA,UAAU,IAAd,aACA,0BAAMA,UAAU,qBAAqBP,KAAKqD,iBAAiB5B,KAE7D,yBAAKlB,UAAU,aACb,sCACA,0BAAMA,UAAU,oBAAoBP,KAAKqD,iBAAiB7B,MAK3C,IAAnBD,EAAuB,wBAAIhB,UAAU,aAAd,cAA4C,kBAAC,EAAD,CACnEL,UAAWA,EACXC,uBAAwBH,KAAKG,uBAC7BC,mBAAoBJ,KAAKI,mBACzBC,uBAAwBL,KAAKK,uBAC7BC,oBAAqBN,KAAKM,2B,GApIhBa,IAAMC,WCAxBkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5959c915.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Tables extends React.Component{\r\n\r\n    render(){\r\n        const {countries , onSortByTotalConfirmed,onSortByTotalDeath,onSortByTotalRecovered, onSortByTotalActive} = this.props;\r\n        return(\r\n            <div className='tables container'>\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            {/* <th scope=\"col\">#</th> */}\r\n                            <th scope=\"col-\">Country</th>\r\n                            <th scope=\"col-\"><a href='/' onClick={onSortByTotalConfirmed}>Cases</a></th>\r\n                            <th scope=\"col\"><a href='/' onClick={onSortByTotalRecovered}>Recoverd</a></th>\r\n                            <th scope=\"col\"><a href='/' onClick={onSortByTotalDeath}>Death</a></th>\r\n                            <th scope=\"col\"><a href='/' onClick={onSortByTotalActive}>Active</a></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            countries.map((country) => (\r\n                                <tr key={country.countryName}>\r\n                                    <td>{country.countryName}</td>\r\n                                    <td>{country.confirmed}</td>\r\n                                    <td>{country.recovered}</td>\r\n                                    <td>{country.deaths}</td>\r\n                                    <td>{country.active}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tables;","import React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Table from './Tables';\n\nclass App extends React.Component {\n\n  state = {\n    totalConfirmed: 0,\n    totalDeaths: 0,\n    totalRecovered: 0,\n    countries: []\n  };\n\n  url = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/web-data/data/cases_country.csv\";\n\n  async componentDidMount(){\n    const response = await axios.get(this.url);\n    const rows = response.data.split('\\n')\n    \n\n    let totalConfirmed = 0;\n    let totalDeaths = 0;\n    let totalRecovered = 0;\n    const countries = [];\n\n    for(let i=1; i<rows.length; i++) {\n      const row = rows[i].split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n      const countryName = row[0];\n      const confirmed = Number(row[4]);\n      const deaths = Number(row[5]);\n      const recovered = Number(row[6]);\n      const active = Number(row[7]);\n\n      if(countryName !== \"\"){\n        countries.push({\n          countryName: countryName,\n          confirmed: confirmed,\n          deaths: deaths,\n          recovered: recovered,\n          active: active,\n        })\n        totalConfirmed += confirmed;\n        totalRecovered += recovered;\n        totalDeaths += deaths;\n      }\n    }\n\n    await new Promise((i) => setTimeout(i,500));\n\n    this.setState({\n      countries, totalRecovered, totalDeaths, totalConfirmed\n    })\n  } \n\n  sortByTotalConfirmed = (countryA, countryB) => {\n    if(countryB.confirmed < countryA.confirmed) return -1;\n    else if(countryB.confirmed > countryA.confirmed) return 1;\n    else return 0;\n  }\n\n  onSortByTotalConfirmed = (e) => {\n    e.preventDefault();\n    const countries = [...this.state.countries];\n    countries.sort(this.sortByTotalConfirmed);\n    this.setState({ countries})\n  }\n\n  sortByTotalDeath = (countryA, countryB) => {\n    if(countryB.deaths < countryA.deaths) return -1;\n    else if(countryB.deaths > countryA.deaths) return 1;\n    else return 0;\n  }\n\n  onSortByTotalDeath = (e) => {\n    e.preventDefault();\n    const countries = [...this.state.countries];\n    countries.sort(this.sortByTotalDeath);\n    this.setState({ countries})\n  }\n\n  sortByTotalRecovered = (countryA, countryB) => {\n    if(countryB.recovered < countryA.recovered) return -1;\n    else if(countryB.recovered > countryA.recovered) return 1;\n    else return 0;\n  }\n\n  onSortByTotalRecovered = (e) => {\n    e.preventDefault();\n    const countries = [...this.state.countries];\n    countries.sort(this.sortByTotalRecovered);\n    this.setState({ countries})\n  }\n\n  sortByTotalActive = (countryA, countryB) => {\n    if(countryB.active < countryA.active) return -1;\n    else if(countryB.active > countryA.active) return 1;\n    else return 0;\n  }\n\n  onSortByTotalActive = (e) => {\n    e.preventDefault();\n    const countries = [...this.state.countries];\n    countries.sort(this.sortByTotalActive);\n    this.setState({ countries})\n  }\n\n  numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  render(){\n    const {countries, totalConfirmed, totalDeaths, totalRecovered} = this.state;\n    return (\n      <div className=\"\">\n       <h1 className='mb-3 center text-center '>COVID-19 Corona</h1>\n       <div className='row container total text-center '>\n          <div className='confirmed col'>\n            <h5>Cases</h5>\n            <span className='font-weight-bold'>{this.numberWithCommas(totalConfirmed)}</span>\n          </div>\n          <div className='recovered col'>\n            <h5 className=''>Recovered</h5>\n            <span className='font-weight-bold '>{this.numberWithCommas(totalRecovered)}</span>\n          </div>\n          <div className='death col'>\n            <h5>Deaths</h5>\n            <span className='font-weight-bold'>{this.numberWithCommas(totalDeaths)}</span>\n          </div>\n       </div>\n        \n       \n       {totalConfirmed === 0 ? <h3 className='container'>Loading...</h3> : <Table \n        countries={countries} \n        onSortByTotalConfirmed={this.onSortByTotalConfirmed}\n        onSortByTotalDeath={this.onSortByTotalDeath}\n        onSortByTotalRecovered={this.onSortByTotalRecovered}\n        onSortByTotalActive={this.onSortByTotalActive}\n        />}\n      </div>\n    );\n  }  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}